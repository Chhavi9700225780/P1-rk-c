# Filename: .github/workflows/deploy.yml

name: Deploy MERN Gita Project to AWS EC2

# This workflow runs automatically whenever you push code to the 'main' branch
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    # The workflow will run on a fresh virtual machine provided by GitHub
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checks out your repository code so the workflow can access it
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Logs into Docker Hub using the secrets you provided
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          # --- THIS LINE IS NOW CORRECTED ---
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 3: Builds the backend Docker image and pushes it to your Docker Hub account
      - name: Build and Push Backend Image
        uses: docker/build-push-action@v4
        with:
          context: ./server
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/gita-backend:latest

      # Step 4: Builds the frontend Docker image and pushes it to your Docker Hub account
      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v4
        with:
          context: ./client
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/gita-frontend:latest

      # Step 5: Securely connects to your AWS EC2 server and deploys the application
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Create a project directory on the server if it doesn't exist
            mkdir -p ~/gita-project
            cd ~/gita-project

            # Create the docker-compose.yml file on the server using your GitHub secrets
            cat << EOF > docker-compose.yml
            version: '3.8'
            services:
              backend:
                image: ${{ secrets.DOCKERHUB_USERNAME }}/gita-backend:latest
                container_name: gita-backend
                restart: always
                environment:
                  - MONGO_URI=${{ secrets.MONGO_URI }}
                  - PORT=5000
                  - RAPID_API_KEY=${{ secrets.RAPID_API_KEY }}
                  - SMTP_MAIL=${{ secrets.SMTP_MAIL }}
                  - SMTP_EMAIL=${{ secrets.SMTP_EMAIL }}
                  - PASSWORD=${{ secrets.PASSWORD }}
                  - JWT_SECRET=${{ secrets.JWT_SECRET }}
                  - JWT_EXPIRES_IN=7d
                  - OTP_TTL_MINUTES=10
                  - OTP_LENGTH=6
                  - OTP_ATTEMPTS=5
                  - DEV_SHOW_OTP=false
                  - FRONTEND_ORIGIN=http://${{ secrets.EC2_HOST }}
                ports:
                  - "5000:5000"

              frontend:
                image: ${{ secrets.DOCKERHUB_USERNAME }}/gita-frontend:latest
                container_name: gita-frontend
                restart: always
                ports:
                  - "80:80"
                depends_on:
                  - backend
            EOF
            
            # Pull the latest images from Docker Hub that were just built
            docker-compose pull
            
            # Stop any old running containers and start the new ones
            docker-compose up -d